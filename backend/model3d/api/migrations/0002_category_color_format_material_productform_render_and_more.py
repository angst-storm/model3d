# Generated by Django 5.0.1 on 2024-01-20 07:49

import colorfield.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('path', models.CharField(max_length=255, unique=True)),
                ('depth', models.PositiveIntegerField()),
                ('numchild', models.PositiveIntegerField(default=0)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
                ('rgb', colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None)),
            ],
            options={
                'verbose_name': 'Цвет',
                'verbose_name_plural': 'Цвета',
            },
        ),
        migrations.CreateModel(
            name='Format',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
            options={
                'verbose_name': 'Расширение',
                'verbose_name_plural': 'Расширения',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
            options={
                'verbose_name': 'Материал',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='ProductForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
            options={
                'verbose_name': 'Форма',
                'verbose_name_plural': 'Формы',
            },
        ),
        migrations.CreateModel(
            name='Render',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
            options={
                'verbose_name': 'Рендер',
                'verbose_name_plural': 'Рендеры',
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
            options={
                'verbose_name': 'Стиль',
                'verbose_name_plural': 'Стили',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField()),
            ],
            options={
                'verbose_name': 'Тег',
                'verbose_name_plural': 'Теги',
            },
        ),
        migrations.AlterModelOptions(
            name='footerurl',
            options={'verbose_name': 'Ссылка в подвале', 'verbose_name_plural': 'Ссылки в подвале'},
        ),
        migrations.AlterModelOptions(
            name='sitesettings',
            options={'verbose_name': 'Настройки сайта'},
        ),
        migrations.AlterModelOptions(
            name='socialmedia',
            options={'verbose_name': 'Социальная сеть', 'verbose_name_plural': 'Социальные сети'},
        ),
        migrations.AlterField(
            model_name='footerurl',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Отображаемое название'),
        ),
        migrations.AlterField(
            model_name='footerurl',
            name='url',
            field=models.URLField(max_length=255, verbose_name='Ссылка'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='contactInformationUrl',
            field=models.URLField(max_length=255, verbose_name='Ссылка на контактную информацию'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='contactsText',
            field=models.TextField(verbose_name='Текст с контактами'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='narrowBanner',
            field=models.ImageField(upload_to='', verbose_name='Узкий рекламный баннер'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='privacyPolicyUrl',
            field=models.URLField(max_length=255, verbose_name='Ссылка на политику конфиденциальности'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='receiveDistributionUrl',
            field=models.URLField(max_length=255, verbose_name='Ссылка на форму с получением рассылки'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='userAgreementUrl',
            field=models.URLField(max_length=255, verbose_name='Ссылка на пользовательское соглашение'),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='wideBanner',
            field=models.ImageField(upload_to='', verbose_name='Широкий рекламный баннер'),
        ),
        migrations.AlterField(
            model_name='socialmedia',
            name='image',
            field=models.ImageField(upload_to='', verbose_name='Логотип'),
        ),
        migrations.AlterField(
            model_name='socialmedia',
            name='url',
            field=models.URLField(max_length=255, verbose_name='Ссылка'),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Имя')),
                ('cost', models.IntegerField(verbose_name='Цена')),
                ('articul', models.CharField(max_length=255, verbose_name='Артикул')),
                ('platform', models.CharField(max_length=255, verbose_name='Платформа моделирования')),
                ('isPopular', models.BooleanField(verbose_name='Популярная модель')),
                ('sizeX', models.IntegerField(verbose_name='Размер по оси X')),
                ('sizeY', models.IntegerField(verbose_name='Размер по оси Y')),
                ('sizeZ', models.IntegerField(verbose_name='Размер по оси Z')),
                ('polygonsCount', models.IntegerField(verbose_name='Количество полигонов')),
                ('buyUrl', models.URLField(max_length=255, verbose_name='Ссылка на покупку')),
                ('description', models.TextField(verbose_name='Описание')),
                ('publicationDate', models.DateTimeField(auto_now_add=True, verbose_name='Дата публикации')),
                ('archive', models.FileField(upload_to='', verbose_name='Архив с моделью')),
                ('preview', models.ImageField(upload_to='', verbose_name='Изображение-превью')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='author', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.category', verbose_name='Категория')),
                ('colors', models.ManyToManyField(blank=True, to='api.color', verbose_name='Цвета')),
                ('formats', models.ManyToManyField(blank=True, to='api.format', verbose_name='Расширения')),
                ('materials', models.ManyToManyField(blank=True, to='api.material', verbose_name='Материалы')),
                ('owners', models.ManyToManyField(blank=True, related_name='owners', to=settings.AUTH_USER_MODEL, verbose_name='Покупатели')),
                ('form', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.productform', verbose_name='Форма')),
                ('render', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.render', verbose_name='Рендер')),
                ('style', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.style', verbose_name='Стиль')),
                ('tags', models.ManyToManyField(blank=True, to='api.tag', verbose_name='Тэги')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
            },
        ),
    ]
